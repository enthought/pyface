name: Run test suite for PySide6 and wxPython

on: [pull_request, workflow_dispatch]

env:
  PYTHONUNBUFFERED: 1

jobs:
  tests-qt:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8']
        qt-api: ['pyqt5', 'pyside2', 'pyside6', 'pyqt6']

    env:
      ETS_TOOLKIT: qt4
      EXCLUDE_TESTS: wx

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out the target commit
      uses: actions/checkout@v3
    - name: Install Linux packages for PySide6 support
      run: |
        sudo apt-get update
        sudo apt-get install qtbase5-dev
        sudo apt-get install qtchooser
        sudo apt-get install qt5-qmake
        sudo apt-get install qtbase5-dev-tools
        sudo apt-get install libegl1
        sudo apt-get install libxkbcommon-x11-0
        sudo apt-get install libxcb-icccm4
        sudo apt-get install libxcb-image0
        sudo apt-get install libxcb-keysyms1
        sudo apt-get install libxcb-randr0
        sudo apt-get install libxcb-render-util0
        sudo apt-get install libxcb-xinerama0
        sudo apt-get install libxcb-shape0
        sudo apt-get install pulseaudio
        sudo apt-get install libpulse-mainloop-glib0
        sudo apt-get install libgstreamer-gl1.0-0
      if: matrix.os == 'ubuntu-latest'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and local packages
      run: |
        python -m pip install .[${{ matrix.qt-api }},pillow,numpy,traitsui,test]
    - name: Create clean test directory
      run: |
        mkdir testdir
    - name: Run the test suite (Linux)
      run: cd testdir && xvfb-run -a python -X faulthandler -m unittest discover -v pyface
      if: matrix.os == 'ubuntu-latest'
    - name: Run the test suite (Windows/macOS)
      run: cd testdir && python -X faulthandler -m unittest discover -v pyface
      if: matrix.os != 'ubuntu-latest'

  tests-wx:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.8']

    env:
      ETS_TOOLKIT: wx
      EXCLUDE_TESTS: qt

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out the target commit
      uses: actions/checkout@v3
    - name: Install Linux packages for wx support
      run: |
        sudo apt-get update
        sudo apt-get install libsdl-image1.2
        sudo apt-get install libsdl2-2.0-0
      if: matrix.os == 'ubuntu-latest'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and local packages
      run: |
        python -m pip install .[wx,traitsui,test]
    - name: Create clean test directory
      run: |
        mkdir testdir
    - name: Run the test suite (Linux)
      run: cd testdir && xvfb-run -a python -X faulthandler -m unittest discover -v pyface
      if: matrix.os == 'ubuntu-latest'
    - name: Run the test suite (Windows/macOS)
      run: cd testdir && python -X faulthandler -m unittest discover -v pyface
      if: matrix.os != 'ubuntu-latest'
